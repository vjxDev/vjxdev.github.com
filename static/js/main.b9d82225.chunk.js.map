{"version":3,"sources":["BLE/BLEProvider.tsx","Content.mdx","WelcomePage.tsx","sidenav/NavText.tsx","sidenav/NavBattery.tsx","sidenav/NavHeat.tsx","sidenav/NavLight.tsx","sidenav/SideNav.tsx","BLE/hooks.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TyValue","Ty","valueReducer","state","action","type","batteryCharging","battery","paload","batteryDischarging","BatteryDischarging","batteryLevel","Lights","heartRate","humidity","environmentalSensing","temperature","ValueContext","createContext","valueState","valueDispatch","bleReducer","AvailabilityChanged","data","isAvailable","payload","Connecting","connecting","failed","FailedToConnect","Connected","ble","isConnected","Disconnect","BLEContext","BLEstate","BLEdispatch","ConnectAndDisconectContext","Connect","LightCharContext","BLEProvider","children","blue","navigator","bluetooth","useReducer","useState","services","characteristics","sersAndChars","setSersAndChars","lightChar","setLightChar","handleAvailabilityChanged","e","target","a","requestDevice","acceptAllDevices","optionalServices","device","addEventListener","HandelDisconnect","gatt","connect","server","getPrimaryServices","prevState","i","length","service","getCharacteristics","chars","Promise","r","setTimeout","c","console","log","uuid","properties","notify","startNotifications","handelValueChange","char","value","getUint8","hum","RGB","red","green","disconnect","forEach","removeEventListener","undefined","useEffect","getAvailability","then","x","Provider","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","HomePage","className","NavTitle","NavSubTitle","NavTextSmall","NavBattery","useContext","ref","useRef","labels","Date","toISOString","slice","datasets","label","fill","backgroundColor","borderColor","prev","current","shift","viewBox","d","options","maintainAspectRatio","scales","xAxes","gridLines","display","yAxes","ticks","min","max","beginAtZero","borderDash","NavHeat","NavLight","g","b","lightColor","setLightColor","dontWrite","color","updateAgain","update","writeValue","Uint8Array","tabIndex","style","onChange","SideNav","useStatus","disabled","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9d82225.chunk.js","sourcesContent":["import {\r\n  createContext,\r\n  Dispatch,\r\n  FC,\r\n  useEffect,\r\n  useReducer,\r\n  useState,\r\n} from \"react\";\r\n//////////\r\n//  Bluetooth\r\n//  - Availability?\r\n//\r\n////////\r\n//  Device / GATT\r\n//    { device, server }\r\n//  - Connected?   /\r\n//  - Connecting?  /\r\n//  - Connect()     -> OnConnect\r\n//  - Disconnect()  -> HandelDisconnect\r\n//\r\n///////\r\n//  Services and characteristics\r\n//  {Services[], characteristics[]}\r\n//  OnConnect                 HandelDisconnect\r\n//  - getPrimaryServices[]   ->  setToNull\r\n//  - getCharacteristics[]   ->  setToNull\r\n//  - startNotifications         removeEventListener\r\n//      - HandelValueChange  ->  removeEventListener\r\n//   { values of all characteristics }\r\n//////////\r\nexport type RGB = {\r\n  red: number;\r\n  green: number;\r\n  blue: number;\r\n};\r\n\r\nexport type valueStateType = {\r\n  Lights?: RGB;\r\n  battery?: {\r\n    batteryLevel?: number;\r\n    batteryCharging?: boolean;\r\n    BatteryDischarging?: boolean;\r\n  };\r\n  environmentalSensing?: {\r\n    temperature?: number;\r\n    humidity?: number;\r\n  };\r\n};\r\nexport enum TyValue {\r\n  batteryCharging = \"BatteryCharging\",\r\n  batteryDischarging = \"BatteryDischarging\",\r\n  batteryLevel = \"BatteryLevel\",\r\n  Lights = \"Lights\",\r\n  temperature = \"Temperature\",\r\n  humidity = \"Humidity\",\r\n}\r\n\r\nexport type ValueActions =\r\n  | { type: TyValue.batteryCharging; paload: boolean }\r\n  | { type: TyValue.batteryDischarging; paload: boolean }\r\n  | { type: TyValue.batteryLevel; paload: number }\r\n  | { type: TyValue.Lights; paload: RGB }\r\n  | { type: TyValue.humidity; paload: number }\r\n  | { type: TyValue.temperature; paload: number };\r\n\r\nconst valueReducer = (state: valueStateType, action: ValueActions) => {\r\n  switch (action.type) {\r\n    case TyValue.batteryCharging:\r\n      return {\r\n        ...state,\r\n        battery: { ...state.battery, batteryCharging: action.paload },\r\n      };\r\n    case TyValue.batteryDischarging:\r\n      return {\r\n        ...state,\r\n        battery: { ...state.battery, BatteryDischarging: action.paload },\r\n      };\r\n\r\n    case TyValue.batteryLevel:\r\n      return {\r\n        ...state,\r\n        battery: { ...state.battery, batteryLevel: action.paload },\r\n      };\r\n    case TyValue.Lights:\r\n      return { ...state, heartRate: action.paload };\r\n    case TyValue.humidity:\r\n      return {\r\n        ...state,\r\n        environmentalSensing: {\r\n          ...state.environmentalSensing,\r\n          humidity: action.paload,\r\n        },\r\n      };\r\n    case TyValue.temperature:\r\n      return {\r\n        ...state,\r\n        environmentalSensing: {\r\n          ...state.environmentalSensing,\r\n          temperature: action.paload,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const ValueContext = createContext<{\r\n  valueState: valueStateType;\r\n  valueDispatch: Dispatch<ValueActions>;\r\n}>({ valueState: {}, valueDispatch: () => null });\r\n\r\ntype ble = {\r\n  device?: BluetoothDevice;\r\n  server?: BluetoothRemoteGATTServer;\r\n  services?: BluetoothRemoteGATTService[];\r\n};\r\ntype BleState = {\r\n  data: {\r\n    isAvailable?: boolean;\r\n    isConnected?: boolean;\r\n    connecting?: boolean;\r\n    failed?: boolean;\r\n  };\r\n  ble: ble;\r\n};\r\nexport enum Ty {\r\n  AvailabilityChanged = \"AvailabilityChanged\",\r\n  Connecting = \"Connecting\",\r\n  Connected = \"Connected\",\r\n  Disconnect = \"Disconnect\",\r\n  FailedToConnect = \"FailedToConnect\",\r\n}\r\n\r\nexport type ConnectionActions =\r\n  | {\r\n      type: Ty.AvailabilityChanged;\r\n      payload: boolean;\r\n    }\r\n  | { type: Ty.Connecting }\r\n  | { type: Ty.Connected; payload: ble }\r\n  | { type: Ty.Disconnect }\r\n  | { type: Ty.FailedToConnect };\r\n\r\nconst bleReducer = (state: BleState, action: ConnectionActions): BleState => {\r\n  switch (action.type) {\r\n    case Ty.AvailabilityChanged:\r\n      return { ...state, data: { isAvailable: action.payload } };\r\n    case Ty.Connecting:\r\n      return {\r\n        ...state,\r\n        data: { ...state.data, connecting: true, failed: false },\r\n      };\r\n    case Ty.FailedToConnect:\r\n      return {\r\n        ...state,\r\n        data: { ...state.data, connecting: false, failed: true },\r\n      };\r\n    case Ty.Connected:\r\n      return {\r\n        ...state,\r\n        ble: action.payload,\r\n        data: {\r\n          ...state.data,\r\n          isConnected: true,\r\n          connecting: false,\r\n          failed: false,\r\n        },\r\n      };\r\n    case Ty.Disconnect:\r\n      return {\r\n        data: { ...state.data, isConnected: false, failed: false },\r\n        ble: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const BLEContext = createContext<{\r\n  BLEstate: BleState;\r\n  BLEdispatch: Dispatch<ConnectionActions>;\r\n}>({\r\n  BLEstate: { data: {}, ble: {} },\r\n  BLEdispatch: () => null,\r\n});\r\n\r\nexport const ConnectAndDisconectContext = createContext<{\r\n  Connect: () => any;\r\n  Disconnect: () => any;\r\n}>({ Connect: () => null, Disconnect: () => null });\r\n\r\nexport const LightCharContext = createContext<{\r\n  lightChar?: BluetoothRemoteGATTCharacteristic;\r\n}>({});\r\n\r\nfunction parseRGB(value: DataView): RGB {\r\n  return { red: 21, blue: 10, green: 14 };\r\n}\r\ninterface ServicesAndCharacteristics {\r\n  services: BluetoothRemoteGATTService[];\r\n  characteristics: BluetoothRemoteGATTCharacteristic[];\r\n}\r\nexport const BLEProvider: FC = ({ children }) => {\r\n  let blue = navigator.bluetooth ? true : false;\r\n  const [BLEstate, BLEdispatch] = useReducer(bleReducer, { data: {}, ble: {} });\r\n  const { isConnected, connecting, isAvailable } = BLEstate.data;\r\n\r\n  const [valueState, valueDispatch] = useReducer(valueReducer, {});\r\n  const [sersAndChars, setSersAndChars] = useState<ServicesAndCharacteristics>({\r\n    services: [],\r\n    characteristics: [],\r\n  });\r\n  const [lightChar, setLightChar] =\r\n    useState<BluetoothRemoteGATTCharacteristic>();\r\n\r\n  // const allServices: servicesType[] = [\r\n  //   {\r\n  //     serviceUUID: \"battery_service\",\r\n  //     characteristicUUID: [\"battery_level\", \"battery_level_state\"],\r\n  //   },\r\n  //   {\r\n  //     serviceUUID: \"heart_rate\",\r\n  //     characteristicUUID: [\"heart_rate_measurement\"],\r\n  //   },\r\n  //   {\r\n  //     serviceUUID: \"environmental_sensing\",\r\n  //     characteristicUUID: [\"temperature\", \"humidity\"],\r\n  //   },\r\n  //   {\r\n  //     serviceUUID: \"4fafc201-1fb5-459e-8fcc-c5c9c331914b\",\r\n  //     characteristicUUID: [ \"beb5483e-36e1-4688-b7f5-ea07361b26a8\"],\r\n  //   },\r\n  //\r\n  // ];\r\n\r\n  // Availability\r\n  function handleAvailabilityChanged(e: any) {\r\n    BLEdispatch({ type: Ty.AvailabilityChanged, payload: e.target });\r\n  }\r\n  useEffect(() => {\r\n    navigator.bluetooth?.getAvailability().then((x) => {\r\n      BLEdispatch({ type: Ty.AvailabilityChanged, payload: x });\r\n      console.log(`One time av ${x}`);\r\n    });\r\n    navigator.bluetooth?.addEventListener(\r\n      \"availabilitychanged\",\r\n      handleAvailabilityChanged\r\n    );\r\n    return () => {\r\n      navigator.bluetooth?.removeEventListener(\r\n        \"availabilitychanged\",\r\n        handleAvailabilityChanged\r\n      );\r\n    };\r\n  }, []);\r\n\r\n  // Connect Function\r\n  async function Connect() {\r\n    if (!isAvailable || isConnected || connecting) return;\r\n\r\n    let device: BluetoothDevice;\r\n    let server: BluetoothRemoteGATTServer;\r\n    try {\r\n      BLEdispatch({ type: Ty.Connecting });\r\n\r\n      device = await navigator.bluetooth.requestDevice({\r\n        acceptAllDevices: true,\r\n        optionalServices: [\r\n          \"battery_service\",\r\n          \"4fafc201-1fb5-459e-8fcc-c5c9c331914b\",\r\n          \"environmental_sensing\",\r\n        ],\r\n      });\r\n\r\n      device.addEventListener(\"gattserverdisconnected\", HandelDisconnect);\r\n      if (!device.gatt) {\r\n        BLEdispatch({ type: Ty.Disconnect });\r\n        return;\r\n      }\r\n      server = await device.gatt.connect();\r\n      BLEdispatch({ type: Ty.Connected, payload: { server, device } });\r\n    } catch {\r\n      BLEdispatch({ type: Ty.FailedToConnect });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let services = await server.getPrimaryServices();\r\n      setSersAndChars((prevState) => ({ ...prevState, services }));\r\n      let characteristics: BluetoothRemoteGATTCharacteristic[] = [];\r\n\r\n      for (let i = 0; i < services.length; i++) {\r\n        const service = services[i];\r\n        let chars = await service.getCharacteristics();\r\n        await new Promise((r) => setTimeout(r, 100));\r\n        characteristics = [...characteristics, ...chars];\r\n      }\r\n\r\n      for (let i = 0; i < characteristics.length; i++) {\r\n        const c = characteristics[i];\r\n        console.log(`added `, c);\r\n\r\n        if (c.uuid === \"beb5483e-36e1-4688-b7f5-ea07361b26a8\") {\r\n          setLightChar(c);\r\n          continue;\r\n        }\r\n        if (c.properties.notify) {\r\n          await c.startNotifications();\r\n\r\n          c.addEventListener(\"characteristicvaluechanged\", handelValueChange);\r\n        } else {\r\n          c.addEventListener(\"characteristicvaluechanged\", handelValueChange);\r\n        }\r\n      }\r\n\r\n      setSersAndChars((prevState) => ({\r\n        ...prevState,\r\n        characteristics: [...characteristics],\r\n      }));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  function handelValueChange(e: Event) {\r\n    const char = e.target as BluetoothRemoteGATTCharacteristic;\r\n    const value = char.value;\r\n    console.log(value);\r\n    if (value) {\r\n      switch (char.uuid) {\r\n        //Temperature\r\n        case \"00002a6e-0000-1000-8000-00805f9b34fb\":\r\n          const a = value.getUint8(0) + value.getUint8(1) * 256;\r\n          valueDispatch({ type: TyValue.temperature, paload: a / 100 });\r\n          break;\r\n        //Humidity\r\n        case \"00002a6f-0000-1000-8000-00805f9b34fb\":\r\n          const hum = value.getUint8(0) + value.getUint8(1) * 256;\r\n          valueDispatch({ type: TyValue.humidity, paload: hum / 100 });\r\n          break;\r\n\r\n        // Battery Level\r\n        case \"00002a19-0000-1000-8000-00805f9b34fb\":\r\n          const batteryLevel = value.getUint8(0) + value.getUint8(1) * 256;\r\n          valueDispatch({ type: TyValue.batteryLevel, paload: batteryLevel });\r\n          break;\r\n        // Battery Power State\r\n        case \"00002a1a-0000-1000-8000-00805f9b34fb\":\r\n          break;\r\n\r\n        case \"beb5483e-36e1-4688-b7f5-ea07361b26a8\":\r\n          const RGB = parseRGB(value);\r\n          valueDispatch({ type: TyValue.Lights, paload: RGB });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  // Disconnect Function\r\n  async function Disconnect() {\r\n    if (!isConnected) return;\r\n    try {\r\n      await BLEstate.ble.server?.disconnect();\r\n    } catch {}\r\n  }\r\n  function HandelDisconnect(e: Event) {\r\n    sersAndChars.characteristics.forEach((c) => {\r\n      c.removeEventListener(\"characteristicvaluechanged\", handelValueChange);\r\n    });\r\n    setSersAndChars({ characteristics: [], services: [] });\r\n    console.log(e.target);\r\n    BLEdispatch({ type: Ty.Disconnect });\r\n    setLightChar(undefined);\r\n  }\r\n  return (\r\n    <>\r\n      {blue ? (\r\n        <BLEContext.Provider value={{ BLEstate, BLEdispatch }}>\r\n          <ConnectAndDisconectContext.Provider value={{ Connect, Disconnect }}>\r\n            <ValueContext.Provider value={{ valueState, valueDispatch }}>\r\n              <LightCharContext.Provider value={{ lightChar: lightChar }}>\r\n                {children}\r\n              </LightCharContext.Provider>\r\n            </ValueContext.Provider>\r\n          </ConnectAndDisconectContext.Provider>\r\n        </BLEContext.Provider>\r\n      ) : (\r\n        <div> No Bluetooth Detected</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Kreiranje aplikacije za Web komunikaciju`}</h1>\n    <p><strong parentName=\"p\">{`Matruski rad`}</strong>{` Tehnička škola Trstenik 2021`}</p>\n    <p><strong parentName=\"p\">{`Profesor:`}</strong>{` Radica Aleksandrov`}</p>\n    <p><strong parentName=\"p\">{`Učenik:`}</strong>{` Jovica Veljković - `}<a parentName=\"p\" {...{\n        \"href\": \"mailto:vjocasb@gmail.com\"\n      }}>{`vjocasb@gmail.com`}</a></p>\n    <h1>{`Uvod`}</h1>\n    <p>{`Velika upotreba interneta je dovela do razvoja web aplikacija i njihovih sposobnosti. Danas nam web omogućava da radimo sve od online kupovine i pisanja dokumeneta do izmene fotografija i upotrebe veštačke inteligencije. Interneta nam dozvoljava da pišemo kod za aplikacije koji instovremeno radi na svim platformama i uređajima bilo to računari ili telefoni. Motiv za izbor ove teme maturskog rada je praktično primenjivanje znanja koje sam stekao u srednjoj školi iz predmeta programiranja, elektronike i mikrokontrolera.`}</p>\n    <p>{`Tokom istraživanja sposobnosti web komunikacije saznao sam da aplikacije napisane u programskom jeziku javascript u pretraživaču imaju sposobnost da komuniciraju sa drugim uređajuma putem Bluetooh-a. Odatle sam došao na ideju da napravim program za mikrokontroler koji će da meri temperaturu i vlažnost vazduha i izmerene podatke da šalje, preko Bluetooth-a, web aplikaciji koja će da ih prikazuje na ekranu korisnika. Osim ovoga na mikrokontroler su povezani lampica, čiju boju menjamo putem web aplikacije i potencimetar koji koristimo kao unos korisnika.`}</p>\n    <p>{`Ova kombinacija web aplikacije i mikrokontrolera može da se razvije u realan proizvod kategorije pametna kuća. Aplikacija napravljena je prezentacionog tipa i pokazuje koliko potencijala imaju progresivne web aplikacije; dok program napisan za mikrokontroler prati sve standarde Bluetooth-a i prikazuje tačne podatka nebitno koji se aplikacija ili uređaj poveže sa njim.`}</p>\n    <h1>{`2. Web`}</h1>\n    <h2>{`2.1 Web aplikacije`}</h2>\n    <p>{`Web aplikacija je program kojem možemo da pristupimo putem internet pretraživača na bilo kom uređaju. Imaju široku upotrebu jer se mogu koristiti za raznovrsne tipove zadataka od online kupivine do zakazivanja pregleda kod doktora. Velika prednost ovih aplikacija je što ne moramo da ih instaliramo, dok desktop i mobilne aplikacije moraju da se preuzimaju i instaliraju što je dosta sporije.`}</p>\n    <h2>{`2.2 Web standardi`}</h2>\n    <p>{`Sve web thnologije spadaju u web standarde. Ovi standardi opisuju kako tehnologija treba da radi i pišu se u dokumntima koji se nazivaju spesifikacije. Spesifikacije detaljno opisuju svaki deo standarda i zato nisu najbolji sredstvo za učenje, već ove dokumente koriste programeri koji prave web pretraživač.`}</p>\n    <p>{`Za web standarde kažemo da su \"živi\" odnosno da se stalno menjaju i nadograđuju. Njih održavaju i standardizuju tela kao na primer WHATWG ( održava HTML standard ), ECMA ( održava JavaScript ), Khronos ( održava standard za 3d grafiku WebGL ), i mnogi drugi.`}</p>\n    <p>{`Tehnologije neophodni za rad web-a su :`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Pretraživači`}</li>\n      <li parentName=\"ol\">{`HTTP ( `}<strong parentName=\"li\">{`H`}</strong>{`yper`}<strong parentName=\"li\">{`T`}</strong>{`ext `}<strong parentName=\"li\">{`T`}</strong>{`ransfer `}<strong parentName=\"li\">{`P`}</strong>{`rotocol )`}</li>\n      <li parentName=\"ol\">{`HTML ( `}<strong parentName=\"li\">{`H`}</strong>{`yper`}<strong parentName=\"li\">{`T`}</strong>{`ext `}<strong parentName=\"li\">{`M`}</strong>{`arkup `}<strong parentName=\"li\">{`L`}</strong>{`anguage )`}</li>\n      <li parentName=\"ol\">{`CSS ( `}<strong parentName=\"li\">{`C`}</strong>{`ascading `}<strong parentName=\"li\">{`S`}</strong>{`tyle `}<strong parentName=\"li\">{`S`}</strong>{`heets )`}</li>\n      <li parentName=\"ol\">{`JavaScript`}</li>\n    </ol>\n    <h2>{`2.3 Pretraživači`}</h2>\n    <p>{`Pretraživaj je aplikacioni program koji se nalazi na računari, omogućava nam pristupimo internetu. Pomoću pretraživača možemo da pristupimo bilokojoj stranici i čitamo je sa bilokog uređaja. Posao pretaživača je da pronađe stranicu koju je korisnik traži pomoću URL odsnosno lika. Ovo se radi preko HTTP ili HTTPS protkola. Kada dobije sadržaj stranice pretraživač treba da prikaže šta se nalazi na stranici prateću web standarde.`}</p>\n    <h2>{`2.4 HTML`}</h2>\n    <p>{`HTML je jezik za opis hiper-teksta, odnosno sve što vidimo kad otvorimo stranicu. Sastoji se iz elemenata koji daju oblik i značenje stranici. Ovo je osnova svakog sajta i HTML predstavlja ulaz na bilo koju stranicu.`}</p>\n    <p>{`Svi elementi imaju ime i svoje značenje. Na primer `}<inlineCode parentName=\"p\">{`<h1> Naslov</h1>`}</inlineCode>{` predstavlja naslov stranice, a `}<inlineCode parentName=\"p\">{`<p> tekst</p>`}</inlineCode>{` predstavlja paragraf. Elementi tamođe mogu da se nalaze jedan u drugom, liste `}<inlineCode parentName=\"p\">{`<ol><li> elemenat liste </li></ol>`}</inlineCode>{`. Postoje elmenti koji nemaju druge element u sebi kao slike `}<inlineCode parentName=\"p\">{`<img src=\"slika.jpg\"></img>`}</inlineCode>{`. Na svaki elemenat možemo da dodamo atribute ka na primer class koji nam daje sposobnost da damo stajl elementu preko css-a.`}</p>\n    <pre {...{\n      \"className\": \"language-html\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"token tag\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"token tag\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`<`}</span>{`div`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"token attr-name\"\n          }}>{`class`}</span><span parentName=\"span\" {...{\n            \"className\": \"token attr-value\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation attr-equals\"\n            }}>{`=`}</span><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`\"`}</span>{`mreza`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`\"`}</span></span><span parentName=\"span\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`>`}</span></span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"token tag\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"token tag\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`<`}</span>{`h1`}</span><span parentName=\"span\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`>`}</span></span>{`Zdravo`}<span parentName=\"code\" {...{\n          \"className\": \"token tag\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"token tag\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`</`}</span>{`h1`}</span><span parentName=\"span\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`>`}</span></span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"token tag\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"token tag\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`<`}</span>{`h2`}</span><span parentName=\"span\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`>`}</span></span>{`Ovo je izgled mreže`}<span parentName=\"code\" {...{\n          \"className\": \"token tag\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"token tag\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`</`}</span>{`h2`}</span><span parentName=\"span\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`>`}</span></span>{`\n  ...\n`}<span parentName=\"code\" {...{\n          \"className\": \"token tag\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"token tag\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`</`}</span>{`div`}</span><span parentName=\"span\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`>`}</span></span>{`\n`}</code></pre>\n    <p>{`U HTML možemo da se povežemo sa css i javascript koji daju stajl i prave stranicu interaktivnom. CSS i JS mogu direktno da se pišu u HTML-u sa elemetima `}<script></script>{` za js ili `}<style></style>{` za css. Ovaj način povezivanja se retko koristi jer je lakše da se povežu preko fajlova koji mogu da se nalaze bilo gde.`}</p>\n    <pre {...{\n      \"className\": \"language-html\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"token tag\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"token tag\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`<`}</span>{`link`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"token attr-name\"\n          }}>{`rel`}</span><span parentName=\"span\" {...{\n            \"className\": \"token attr-value\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation attr-equals\"\n            }}>{`=`}</span><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`\"`}</span>{`stylesheet`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`\"`}</span></span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"token attr-name\"\n          }}>{`href`}</span><span parentName=\"span\" {...{\n            \"className\": \"token attr-value\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation attr-equals\"\n            }}>{`=`}</span><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`\"`}</span>{`stajl.css`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`\"`}</span></span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`/>`}</span></span>{` // za Css\n`}<span parentName=\"code\" {...{\n          \"className\": \"token tag\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"token tag\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`<`}</span>{`script`}</span>{` `}<span parentName=\"span\" {...{\n            \"className\": \"token attr-name\"\n          }}>{`src`}</span><span parentName=\"span\" {...{\n            \"className\": \"token attr-value\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation attr-equals\"\n            }}>{`=`}</span><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`\"`}</span>{`mojaskripta.js`}<span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`\"`}</span></span><span parentName=\"span\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`>`}</span></span><span parentName=\"code\" {...{\n          \"className\": \"token script\"\n        }}></span><span parentName=\"code\" {...{\n          \"className\": \"token tag\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"token tag\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token punctuation\"\n            }}>{`</`}</span>{`script`}</span><span parentName=\"span\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`>`}</span></span>{`\n// za Javascript\n`}</code></pre>\n    <h2>{`2.5 CSS`}</h2>\n    <p>{`CSS nam omoguđava da menjamo oblik teksta, pozicuju slika i način na koji će se elementi stranice ponašati. Svi elementi stranice ( tekst, slike, linkovi, itd ) su kutije bez definicije gde treba da se nalaze i kako treba da izgledaju, zato koristimo klase da damo izgled.`}</p>\n    <pre {...{\n      \"className\": \"language-css\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"token selector\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"token class\"\n          }}>{`.mreza`}</span></span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"token punctuation\"\n        }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"token property\"\n        }}>{`disply`}</span><span parentName=\"code\" {...{\n          \"className\": \"token punctuation\"\n        }}>{`:`}</span>{` grid`}<span parentName=\"code\" {...{\n          \"className\": \"token punctuation\"\n        }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"token property\"\n        }}>{`grid-template-columns`}</span><span parentName=\"code\" {...{\n          \"className\": \"token punctuation\"\n        }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"token number\"\n        }}>{`1`}</span><span parentName=\"code\" {...{\n          \"className\": \"token unit\"\n        }}>{`fr`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"token number\"\n        }}>{`1`}</span><span parentName=\"code\" {...{\n          \"className\": \"token unit\"\n        }}>{`fr`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"token number\"\n        }}>{`1`}</span><span parentName=\"code\" {...{\n          \"className\": \"token unit\"\n        }}>{`fr`}</span><span parentName=\"code\" {...{\n          \"className\": \"token punctuation\"\n        }}>{`;`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"token property\"\n        }}>{`grid-template-rows`}</span><span parentName=\"code\" {...{\n          \"className\": \"token punctuation\"\n        }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"token number\"\n        }}>{`200`}</span><span parentName=\"code\" {...{\n          \"className\": \"token unit\"\n        }}>{`px`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"token number\"\n        }}>{`200`}</span><span parentName=\"code\" {...{\n          \"className\": \"token unit\"\n        }}>{`px`}</span><span parentName=\"code\" {...{\n          \"className\": \"token punctuation\"\n        }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"token punctuation\"\n        }}>{`}`}</span>{`\n`}</code></pre>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"Kreiranje%20aplikacije%20za%20Web%20komunikaciju%20a554493a8e5d49db9413cfe2682a2689/Untitled.png\",\n        \"alt\": \"Kreiranje%20aplikacije%20za%20Web%20komunikaciju%20a554493a8e5d49db9413cfe2682a2689/Untitled.png\"\n      }}></img></p>\n    <p>{`Zelenom bloku je data osobina mreže, a u njemu se nalaze više manjih blokova sa centriranim tekstom`}</p>\n    <h3>{`2.5.1 SCSS`}</h3>\n    <h2>{`2.6 Javascript`}</h2>\n    <p>{`Javascript je programski jezik koji koristimo na web-u i koristimo ga za sve od dodavnja klika na dugme, učitavanje podataka sa bloga do kmplikovanog crtanja 3D geometrije. Ovaj programski jezik može direktno da utiče na HTML i CSS koji se nalazi na stranici i otvara mogućnost da svaki korisnik ima jedisnten izgled stranice.`}</p>\n    <h2>{`2.6.2 React`}</h2>\n    <h2>{`2.6.2 Typescript`}</h2>\n    <h1>{`Bluetooth`}</h1>\n    <h3>{`Bluetooth low energy (BLE)`}</h3>\n    <h3>{`Web Bluetooth`}</h3>\n    <p>{`Jedna od novih funkcija je upotreba Web Bluetooth-a za komunikaciju sa drugim uređajima.`}</p>\n    <h1>{`ESP32`}</h1>\n    <h3>{`Bluetooth`}</h3>\n    <h3>{`DHT`}</h3>\n    <h3>{`Display`}</h3>\n    <h3>{`Potenciometar`}</h3>\n    <h3>{`Multiprocesiranje`}</h3>\n    <h2>{`Kod editor`}</h2>\n    <h1>{`Implementacija koda sa objašnjenjem`}</h1>\n    <h2>{`ESP32`}</h2>\n    <h3>{`Inicijalizacija`}</h3>\n    <h3>{`Provera`}</h3>\n    <h3>{`Spalje podataka`}</h3>\n    <h3>{`Promanje podataka`}</h3>\n    <h2>{`Web aplikacija`}</h2>\n    <h3>{`Prikazivanje na ekranu`}</h3>\n    <h3>{`Inicijalizacija`}</h3>\n    <h3>{`Konekcija - Diskonekcija`}</h3>\n    <h3>{`Primanje podataka`}</h3>\n    <h3>{`Slanje podataka`}</h3>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","/* eslint-disable import/no-webpack-loader-syntax */\r\nimport Content from \"!babel-loader!@mdx-js/loader!./Content.mdx\";\r\n\r\nexport const HomePage = () => {\r\n  return (\r\n    <article className=\"main__wrapper\">\r\n      <div className=\"markdown-body mt-2\">\r\n        <Content />\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\n\r\nexport const NavTitle: FC = ({ children }) => {\r\n  return <h1 className=\"aside__text-title\">{children}</h1>;\r\n};\r\n\r\nexport const NavSubTitle: FC = ({ children }) => {\r\n  return <h2 className=\"aside__text-subtitile\">{children}</h2>;\r\n};\r\n\r\nexport const NavTextSmall: FC = ({ children }) => {\r\n  return <h3 className=\"aside__text-small\">{children}</h3>;\r\n};\r\n","import { useContext, useEffect, useRef } from \"react\";\r\nimport { ValueContext } from \"../BLE/BLEProvider\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { ChartData as IChartData } from \"chart.js\";\r\nimport { NavSubTitle } from \"./NavText\";\r\n\r\nexport const NavBattery = () => {\r\n  const options: Chart.ChartOptions = {\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            min: 0,\r\n            max: 100,\r\n            beginAtZero: true,\r\n          },\r\n          gridLines: {\r\n            borderDash: [10, 5],\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  const { valueState } = useContext(ValueContext);\r\n\r\n  const ref = useRef<IChartData>({\r\n    labels: [new Date().toISOString().slice(17, 22)],\r\n    datasets: [\r\n      {\r\n        label: \"% Battery\",\r\n        data: [0],\r\n        fill: false,\r\n        backgroundColor: \"hsl(189, 60%, 70%)\",\r\n        borderColor: \"hsla(182, 100%, 56%, 0.2)\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (valueState.battery?.batteryLevel) {\r\n      let prev = ref.current;\r\n      let data: any;\r\n\r\n      if (prev.datasets?.[0].data) {\r\n        data = prev.datasets?.[0].data;\r\n\r\n        if (data.length > 100) {\r\n          prev.labels?.shift();\r\n          data.shift();\r\n        }\r\n        if (prev.labels)\r\n          prev.labels = [\r\n            ...prev.labels,\r\n            new Date().toISOString().slice(17, 22),\r\n          ];\r\n\r\n        prev.datasets[0].data = [...data, valueState.battery?.batteryLevel];\r\n        console.log(\"data\", prev.datasets[0].data);\r\n      }\r\n    }\r\n  }, [valueState.battery?.batteryLevel]);\r\n\r\n  return (\r\n    <>\r\n      <NavSubTitle>\r\n        <svg className=\"svg-icon\" viewBox=\"0 0 24 24\">\r\n          <path\r\n            fill=\"currentColor\"\r\n            d=\"M16,15H8V6H16M16.67,4H15V2H9V4H7.33A1.33,1.33 0 0,0 6,5.33V20.67C6,21.4 6.6,22 7.33,22H16.67A1.33,1.33 0 0,0 18,20.67V5.33C18,4.6 17.4,4 16.67,4Z\"\r\n          />\r\n        </svg>\r\n        Baterija\r\n      </NavSubTitle>\r\n\r\n      <div className=\"chart\">\r\n        <Line data={ref.current} options={options} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { ValueContext } from \"../BLE/BLEProvider\";\r\nimport { NavTextSmall, NavTitle, NavSubTitle } from \"./NavText\";\r\n\r\nexport const NavHeat = () => {\r\n  const { valueState } = useContext(ValueContext);\r\n\r\n  return (\r\n    <>\r\n      <NavTitle>Aplikacija</NavTitle>\r\n      <NavSubTitle>\r\n        <svg className=\"svg-icon\" viewBox=\"0 0 24 24\">\r\n          <path\r\n            fill=\"currentColor\"\r\n            d=\"M11,9A4,4 0 0,1 15,13A4,4 0 0,1 11,17A4,4 0 0,1 7,13A4,4 0 0,1 11,9M11,11A2,2 0 0,0 9,13A2,2 0 0,0 11,15A2,2 0 0,0 13,13A2,2 0 0,0 11,11M7,4H14A4,4 0 0,1 18,8V9H16V8A2,2 0 0,0 14,6H7A2,2 0 0,0 5,8V20H16V18H18V22H3V8A4,4 0 0,1 7,4M16,11C18.5,11 18.5,9 21,9V11C18.5,11 18.5,13 16,13V11M16,15C18.5,15 18.5,13 21,13V15C18.5,15 18.5,17 16,17V15Z\"\r\n          />\r\n        </svg>\r\n        DHT Senzor\r\n      </NavSubTitle>\r\n      <div className=\"grid__2 text-center \">\r\n        <h2>\r\n          <svg className=\"svg-icon\" viewBox=\"0 0 24 24\">\r\n            <path\r\n              fill=\"currentColor\"\r\n              d=\"M15 13V5A3 3 0 0 0 9 5V13A5 5 0 1 0 15 13M12 4A1 1 0 0 1 13 5V8H11V5A1 1 0 0 1 12 4Z\"\r\n            />\r\n          </svg>\r\n          {valueState.environmentalSensing?.temperature} C\r\n        </h2>\r\n\r\n        <h2>\r\n          <svg className=\"svg-icon\" viewBox=\"0 0 24 24\">\r\n            <path\r\n              fill=\"currentColor\"\r\n              d=\"M12,3.25C12,3.25 6,10 6,14C6,17.32 8.69,20 12,20A6,6 0 0,0 18,14C18,10 12,3.25 12,3.25M14.47,9.97L15.53,11.03L9.53,17.03L8.47,15.97M9.75,10A1.25,1.25 0 0,1 11,11.25A1.25,1.25 0 0,1 9.75,12.5A1.25,1.25 0 0,1 8.5,11.25A1.25,1.25 0 0,1 9.75,10M14.25,14.5A1.25,1.25 0 0,1 15.5,15.75A1.25,1.25 0 0,1 14.25,17A1.25,1.25 0 0,1 13,15.75A1.25,1.25 0 0,1 14.25,14.5Z\"\r\n            />\r\n          </svg>\r\n          {valueState.environmentalSensing?.humidity} %\r\n        </h2>\r\n      </div>\r\n      <div className=\"grid__2 text-center \">\r\n        <div className=\"grid__2-inner\">\r\n          <NavTextSmall>Temperatura</NavTextSmall>\r\n        </div>\r\n\r\n        <div className=\"grid__2-inner\">\r\n          <NavTextSmall>\r\n            Vlažnost <br /> vazduhaž\r\n          </NavTextSmall>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <svg className=\"svg-icon\" viewBox=\"0 0 24 24\">\r\n        <path\r\n          fill=\"currentColor\"\r\n          d=\"M15 13V5A3 3 0 0 0 9 5V13A5 5 0 1 0 15 13M12 4A1 1 0 0 1 13 5V8H11V5A1 1 0 0 1 12 4Z\"\r\n        />\r\n      </svg>\r\n      <svg className=\"svg-icon\" viewBox=\"0 0 24 24\">\r\n        <path\r\n          fill=\"currentColor\"\r\n          d=\"M12,3.25C12,3.25 6,10 6,14C6,17.32 8.69,20 12,20A6,6 0 0,0 18,14C18,10 12,3.25 12,3.25M14.47,9.97L15.53,11.03L9.53,17.03L8.47,15.97M9.75,10A1.25,1.25 0 0,1 11,11.25A1.25,1.25 0 0,1 9.75,12.5A1.25,1.25 0 0,1 8.5,11.25A1.25,1.25 0 0,1 9.75,10M14.25,14.5A1.25,1.25 0 0,1 15.5,15.75A1.25,1.25 0 0,1 14.25,17A1.25,1.25 0 0,1 13,15.75A1.25,1.25 0 0,1 14.25,14.5Z\"\r\n        />\r\n      </svg>\r\n      <span>Temperature</span>\r\n      <span>H:{valueState.environmentalSensing?.humidity}</span>\r\n\r\n      <span>T:{valueState.environmentalSensing?.temperature}</span> */}\r\n    </>\r\n  );\r\n};\r\n","import { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { RgbColorPicker, RgbColor } from \"react-colorful\";\r\nimport { LightCharContext } from \"../BLE/BLEProvider\";\r\nimport { NavSubTitle } from \"./NavText\";\r\n\r\nexport const NavLight = () => {\r\n  const [lightColor, setLightColor] = useState<RgbColor>({ r: 0, g: 0, b: 0 });\r\n  const { lightChar } = useContext(LightCharContext);\r\n\r\n  const changeColor = (c: RgbColor) => {\r\n    setLightColor(c);\r\n    color.current = c;\r\n  };\r\n  const dontWrite = useRef<boolean>(false);\r\n  const color = useRef<RgbColor>({ r: 0, g: 0, b: 0 });\r\n  const updateAgain = useRef<boolean>(false);\r\n\r\n  const update = async () => {\r\n    console.log(lightColor);\r\n    if (lightChar === undefined || dontWrite.current) {\r\n      console.log(\"skip update\");\r\n      updateAgain.current = true;\r\n      return;\r\n    }\r\n    dontWrite.current = true;\r\n    await lightChar?.writeValue(\r\n      new Uint8Array([color.current.r, color.current.g, color.current.b])\r\n    );\r\n    await lightChar?.writeValue(\r\n      new Uint8Array([color.current.r, color.current.g, color.current.b])\r\n    );\r\n    dontWrite.current = false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    update();\r\n    // eslint-disable-next-line\r\n  }, [lightColor]);\r\n\r\n  return (\r\n    <>\r\n      <NavSubTitle>\r\n        <svg className=\"svg-icon\" viewBox=\"0 0 24 24\">\r\n          <path\r\n            fill=\"currentColor\"\r\n            d=\"M12,2A7,7 0 0,1 19,9C19,11.38 17.81,13.47 16,14.74V17A1,1 0 0,1 15,18H9A1,1 0 0,1 8,17V14.74C6.19,13.47 5,11.38 5,9A7,7 0 0,1 12,2M9,21V20H15V21A1,1 0 0,1 14,22H10A1,1 0 0,1 9,21M12,4A5,5 0 0,0 7,9C7,11.05 8.23,12.81 10,13.58V16H14V13.58C15.77,12.81 17,11.05 17,9A5,5 0 0,0 12,4Z\"\r\n          />\r\n        </svg>\r\n        LED Dioda\r\n      </NavSubTitle>\r\n      <div className=\"grid__2\">\r\n        <div className=\"picker\">\r\n          <button\r\n            tabIndex={0}\r\n            className=\"swatch\"\r\n            style={{\r\n              backgroundColor: `rgb(${color.current.r},${color.current.g},${color.current.b})`,\r\n            }}\r\n          />\r\n\r\n          <div className=\"popover\">\r\n            <RgbColorPicker color={lightColor} onChange={changeColor} />\r\n          </div>\r\n        </div>\r\n        <div className=\"table-grid\">\r\n          <span>Crvena:</span>\r\n          <span className=\"ml-2\">{color.current.r}</span>\r\n\r\n          <span>Zelena:</span>\r\n          <span className=\"ml-2\">{color.current.g}</span>\r\n\r\n          <span>Plava:</span>\r\n          <span className=\"ml-2\">{color.current.b}</span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useConnect, useDisconnect, useStatus } from \"../BLE/hooks\";\r\n\r\nimport { NavBattery } from \"./NavBattery\";\r\nimport { NavHeat } from \"./NavHeat\";\r\nimport { NavLight } from \"./NavLight\";\r\n\r\nexport const SideNav = () => {\r\n  const [Connect] = useConnect();\r\n  const [Disconnect] = useDisconnect();\r\n\r\n  const { failed, device, isConnected } = useStatus();\r\n\r\n  // const { failed, device } = useStatus();\r\n  // const isConnected = true;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"aside__top-nav\">\r\n        <button\r\n          className={`aside__open-button ${\r\n            isConnected\r\n              ? \" aside__open-button-connected \"\r\n              : \" aside__open-button-disconnected \"\r\n          }`}\r\n        >\r\n          <svg className=\"svg-icon\" viewBox=\"0 0 24 24\">\r\n            <path\r\n              fill=\"currentColor\"\r\n              d=\"M14.88,16.29L13,18.17V14.41M13,5.83L14.88,7.71L13,9.58M17.71,7.71L12,2H11V9.58L6.41,5L5,6.41L10.59,12L5,17.58L6.41,19L11,14.41V22H12L17.71,16.29L13.41,12L17.71,7.71Z\"\r\n            />\r\n          </svg>\r\n        </button>\r\n        <button className=\"aside__close-button\" tabIndex={-1} disabled>\r\n          <svg className=\"svg-icon\" viewBox=\"0 0 24 24\">\r\n            <path\r\n              fill=\"currentColor\"\r\n              d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      <div tabIndex={0} className=\"aside__wrapper\">\r\n        <div className=\" aside__buttons \">\r\n          {!isConnected ? (\r\n            <>\r\n              <button className=\"\" onClick={Connect}>\r\n                <svg className=\"svg-icon\" viewBox=\"0 0 24 24\">\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M12 7.5C12.69 7.5 13.27 7.73 13.76 8.2S14.5 9.27 14.5 10C14.5 11.05 14 11.81 13 12.28V21H11V12.28C10 11.81 9.5 11.05 9.5 10C9.5 9.27 9.76 8.67 10.24 8.2S11.31 7.5 12 7.5M16.69 5.3C17.94 6.55 18.61 8.11 18.7 10C18.7 11.8 18.03 13.38 16.69 14.72L15.5 13.5C16.5 12.59 17 11.42 17 10C17 8.67 16.5 7.5 15.5 6.5L16.69 5.3M6.09 4.08C4.5 5.67 3.7 7.64 3.7 10S4.5 14.3 6.09 15.89L4.92 17.11C3 15.08 2 12.7 2 10C2 7.3 3 4.94 4.92 2.91L6.09 4.08M19.08 2.91C21 4.94 22 7.3 22 10C22 12.8 21 15.17 19.08 17.11L17.91 15.89C19.5 14.3 20.3 12.33 20.3 10S19.5 5.67 17.91 4.08L19.08 2.91M7.31 5.3L8.5 6.5C7.5 7.42 7 8.58 7 10C7 11.33 7.5 12.5 8.5 13.5L7.31 14.72C5.97 13.38 5.3 11.8 5.3 10C5.3 8.2 5.97 6.64 7.31 5.3Z\"\r\n                  />\r\n                </svg>\r\n                Connect\r\n              </button>\r\n              {failed && (\r\n                <p className=\"aside__button--info \">Faild to connect</p>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <button className=\"\" onClick={Disconnect}>\r\n                Disconnect\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n        {isConnected && (\r\n          <div className=\" aside__info \">\r\n            <NavHeat />\r\n            <NavLight />\r\n            <NavBattery />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { ConnectAndDisconectContext, BLEContext } from \"./BLEProvider\";\r\n\r\nexport const useLogAll = () => {\r\n  const { BLEstate } = useContext(BLEContext);\r\n  function logAll() {\r\n    console.log(\"device %o\", BLEstate.ble.device);\r\n    console.log(\"GATT Server %o\", BLEstate.ble.server);\r\n  }\r\n  return logAll;\r\n};\r\n\r\nexport const useStatus = () => {\r\n  const { BLEstate } = useContext(BLEContext);\r\n  const { device } = BLEstate.ble;\r\n  const { isAvailable, isConnected, connecting, failed } = BLEstate.data;\r\n\r\n  return { isAvailable, isConnected, connecting, failed, device } as const;\r\n};\r\n\r\nexport const useConnect = () => {\r\n  const { Connect } = useContext(ConnectAndDisconectContext);\r\n  return [Connect] as const;\r\n};\r\n\r\nexport const useDisconnect = () => {\r\n  const { Disconnect } = useContext(ConnectAndDisconectContext);\r\n\r\n  return [Disconnect] as const;\r\n};\r\n///\r\n//     GetData\r\n///\r\n// export const useService = (serviceUUID: BluetoothServiceUUID) => {\r\n//   const { BLEstate } = useContext(BLEContext);\r\n//   const { serState, serDispatch } = useContext(ServicesContext);\r\n//   const GATT = BLEstate.ble.server;\r\n\r\n//   async function getService() {\r\n//     if (serState.services?.find((l) => l.serviceUUID === serviceUUID)) return;\r\n//     const s = await GATT?.getPrimaryService(serviceUUID);\r\n//     serDispatch({\r\n//       type: TyS.addSer,\r\n//       payload: { serviceUUID: serviceUUID, service: s },\r\n//     });\r\n//   }\r\n//   useEffect(() => {\r\n//     getService();\r\n//     // eslint-disable-next-line\r\n//   }, [GATT]);\r\n\r\n//   return serState.services?.find((l) => l.serviceUUID === serviceUUID);\r\n// };\r\n\r\n// export const useGetData = (\r\n//   serviceUUID: BluetoothServiceUUID,\r\n//   characteristicUUID: BluetoothCharacteristicUUID\r\n// ) => {\r\n//   const { BLEstate } = useContext(BLEContext);\r\n//   const GATT = BLEstate.ble.server;\r\n//   const [\r\n//     // eslint-disable-next-line\r\n//     characteristic,\r\n//     setCharacteristic,\r\n//   ] = useState<BluetoothRemoteGATTCharacteristic>();\r\n//   const service = useService(serviceUUID);\r\n\r\n//   const [value, setValue] = useState<DataView>();\r\n//   async function getData() {\r\n//     console.log(\"GetData  \");\r\n\r\n//     try {\r\n//       const c = await service?.service?.getCharacteristic(characteristicUUID);\r\n//       console.log(\"Char %o\", c);\r\n\r\n//       setCharacteristic(c);\r\n\r\n//       if (c?.properties.notify) {\r\n//         console.log(\"Char \");\r\n//         await c.startNotifications();\r\n//         c?.addEventListener(\"characteristicvaluechanged\", HandelValueChange);\r\n//       } else {\r\n//         c?.addEventListener(\"characteristicvaluechanged\", HandelValueChange);\r\n//       }\r\n//     } catch (e) {\r\n//       console.error(e);\r\n//     }\r\n//   }\r\n\r\n//   function HandelValueChange(e: Event) {\r\n//     const v = (e.target as BluetoothRemoteGATTCharacteristic).value;\r\n//     console.log(\"HandelValueChange %o\", v);\r\n\r\n//     setValue(v);\r\n//   }\r\n//   useEffect(() => {\r\n//     getData();\r\n\r\n//     // eslint-disable-next-line\r\n//   }, [GATT, service]);\r\n//   useEffect(() => {\r\n//     console.log(\r\n//       \"value %o, serviceUUID %o, characteristicUUID %o, service %o\",\r\n//       value,\r\n//       serviceUUID,\r\n//       characteristicUUID,\r\n//       service\r\n//     );\r\n//   }, [value, serviceUUID, characteristicUUID, service]);\r\n\r\n//   return [value, getData] as const;\r\n// };\r\n// export const useIsConnected = (): boolean => {\r\n//   return useContext(BLEContext).state.isConnected;\r\n// };\r\n","import { BLEProvider } from \"./BLE/BLEProvider\";\n\nimport { HomePage } from \"./WelcomePage\";\nimport { SideNav } from \"./sidenav/SideNav\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"title-bar\"></div>\n\n      <div className=\"layout-grid container\">\n        <main className=\"main\">\n          <HomePage />\n        </main>\n        <aside className=\"aside\">\n          <BLEProvider>\n            <SideNav />\n          </BLEProvider>\n        </aside>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./normalize.css\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}