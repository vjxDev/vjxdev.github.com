{"version":3,"sources":["BLE/BLEProvider.tsx","pages/WelcomePage.tsx","sidenav/NavBattery.tsx","sidenav/NavHeat.tsx","sidenav/NavLight.tsx","sidenav/SideNav.tsx","BLE/hooks.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TyValue","Ty","valueReducer","state","action","type","batteryCharging","battery","paload","batteryDischarging","BatteryDischarging","batteryLevel","Lights","heartRate","humidity","environmentalSensing","temperature","ValueContext","createContext","valueState","valueDispatch","bleReducer","AvailabilityChanged","data","isAvailable","payload","Connecting","connecting","failed","FailedToConnect","Connected","ble","isConnected","Disconnect","BLEContext","BLEstate","BLEdispatch","ConnectAndDisconectContext","Connect","LightCharContext","BLEProvider","children","blue","navigator","bluetooth","useReducer","useState","services","characteristics","sersAndChars","setSersAndChars","lightChar","setLightChar","handleAvailabilityChanged","e","target","a","requestDevice","acceptAllDevices","optionalServices","device","addEventListener","HandelDisconnect","gatt","connect","server","getPrimaryServices","prevState","forEach","service","i","Promise","r","setTimeout","console","trace","getCharacteristics","log","c","j","uuid","properties","notify","time","timeEnd","startNotifications","error","HandelValueChange","char","value","getUint8","hum","RGB","red","green","disconnect","removeEventListener","undefined","useEffect","getAvailability","then","x","Provider","HomePage","className","NavBattery","useContext","labels","datasets","label","fill","backgroundColor","borderColor","chartData","setChartData","prev","d","length","shift","Date","toISOString","slice","viewBox","options","maintainAspectRatio","scales","xAxes","gridLines","display","yAxes","ticks","min","max","beginAtZero","borderDash","NavHeat","NavLight","g","b","lightColor","setLightColor","dontWrite","useRef","color","updateAgain","update","current","writeValue","Uint8Array","tabIndex","style","onChange","SideNav","useStatus","disabled","onClick","name","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5c58d46.chunk.js","sourcesContent":["import {\r\n  createContext,\r\n  Dispatch,\r\n  FC,\r\n  useEffect,\r\n  useReducer,\r\n  useState,\r\n} from \"react\";\r\n//////////\r\n//  Bluetooth\r\n//  - Availability?\r\n//\r\n////////\r\n//  Device / GATT\r\n//    { device, server }\r\n//  - Connected?   /\r\n//  - Connecting?  /\r\n//  - Connect()     -> OnConnect\r\n//  - Disconnect()  -> HandelDisconnect\r\n//\r\n///////\r\n//  Services and characteristics\r\n//  {Services[], characteristics[]}\r\n//  OnConnect                 HandelDisconnect\r\n//  - getPrimaryServices[]   ->  setToNull\r\n//  - getCharacteristics[]   ->  setToNull\r\n//  - startNotifications         removeEventListener\r\n//      - HandelValueChange  ->  removeEventListener\r\n//   { values of all characteristics }\r\n//////////\r\nexport type RGB = {\r\n  red: number;\r\n  green: number;\r\n  blue: number;\r\n};\r\n\r\nexport type valueStateType = {\r\n  Lights?: RGB;\r\n  battery?: {\r\n    batteryLevel?: number;\r\n    batteryCharging?: boolean;\r\n    BatteryDischarging?: boolean;\r\n  };\r\n  environmentalSensing?: {\r\n    temperature?: number;\r\n    humidity?: number;\r\n  };\r\n};\r\nexport enum TyValue {\r\n  batteryCharging = \"BatteryCharging\",\r\n  batteryDischarging = \"BatteryDischarging\",\r\n  batteryLevel = \"BatteryLevel\",\r\n  Lights = \"Lights\",\r\n  temperature = \"Temperature\",\r\n  humidity = \"Humidity\",\r\n}\r\n\r\nexport type ValueActions =\r\n  | { type: TyValue.batteryCharging; paload: boolean }\r\n  | { type: TyValue.batteryDischarging; paload: boolean }\r\n  | { type: TyValue.batteryLevel; paload: number }\r\n  | { type: TyValue.Lights; paload: RGB }\r\n  | { type: TyValue.humidity; paload: number }\r\n  | { type: TyValue.temperature; paload: number };\r\n\r\nconst valueReducer = (state: valueStateType, action: ValueActions) => {\r\n  switch (action.type) {\r\n    case TyValue.batteryCharging:\r\n      return {\r\n        ...state,\r\n        battery: { ...state.battery, batteryCharging: action.paload },\r\n      };\r\n    case TyValue.batteryDischarging:\r\n      return {\r\n        ...state,\r\n        battery: { ...state.battery, BatteryDischarging: action.paload },\r\n      };\r\n\r\n    case TyValue.batteryLevel:\r\n      return {\r\n        ...state,\r\n        battery: { ...state.battery, batteryLevel: action.paload },\r\n      };\r\n    case TyValue.Lights:\r\n      return { ...state, heartRate: action.paload };\r\n    case TyValue.humidity:\r\n      return {\r\n        ...state,\r\n        environmentalSensing: {\r\n          ...state.environmentalSensing,\r\n          humidity: action.paload,\r\n        },\r\n      };\r\n    case TyValue.temperature:\r\n      return {\r\n        ...state,\r\n        environmentalSensing: {\r\n          ...state.environmentalSensing,\r\n          temperature: action.paload,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const ValueContext = createContext<{\r\n  valueState: valueStateType;\r\n  valueDispatch: Dispatch<ValueActions>;\r\n}>({ valueState: {}, valueDispatch: () => null });\r\n\r\ntype ble = {\r\n  device?: BluetoothDevice;\r\n  server?: BluetoothRemoteGATTServer;\r\n  services?: BluetoothRemoteGATTService[];\r\n};\r\ntype BleState = {\r\n  data: {\r\n    isAvailable?: boolean;\r\n    isConnected?: boolean;\r\n    connecting?: boolean;\r\n    failed?: boolean;\r\n  };\r\n  ble: ble;\r\n};\r\nexport enum Ty {\r\n  AvailabilityChanged = \"AvailabilityChanged\",\r\n  Connecting = \"Connecting\",\r\n  Connected = \"Connected\",\r\n  Disconnect = \"Disconnect\",\r\n  FailedToConnect = \"FailedToConnect\",\r\n}\r\n\r\nexport type ConnectionActions =\r\n  | {\r\n      type: Ty.AvailabilityChanged;\r\n      payload: boolean;\r\n    }\r\n  | { type: Ty.Connecting }\r\n  | { type: Ty.Connected; payload: ble }\r\n  | { type: Ty.Disconnect }\r\n  | { type: Ty.FailedToConnect };\r\n\r\nconst bleReducer = (state: BleState, action: ConnectionActions): BleState => {\r\n  switch (action.type) {\r\n    case Ty.AvailabilityChanged:\r\n      return { ...state, data: { isAvailable: action.payload } };\r\n    case Ty.Connecting:\r\n      return {\r\n        ...state,\r\n        data: { ...state.data, connecting: true, failed: false },\r\n      };\r\n    case Ty.FailedToConnect:\r\n      return {\r\n        ...state,\r\n        data: { ...state.data, connecting: false, failed: true },\r\n      };\r\n    case Ty.Connected:\r\n      return {\r\n        ...state,\r\n        ble: action.payload,\r\n        data: {\r\n          ...state.data,\r\n          isConnected: true,\r\n          connecting: false,\r\n          failed: false,\r\n        },\r\n      };\r\n    case Ty.Disconnect:\r\n      return {\r\n        data: { ...state.data, isConnected: false, failed: false },\r\n        ble: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const BLEContext = createContext<{\r\n  BLEstate: BleState;\r\n  BLEdispatch: Dispatch<ConnectionActions>;\r\n}>({\r\n  BLEstate: { data: {}, ble: {} },\r\n  BLEdispatch: () => null,\r\n});\r\n\r\nexport const ConnectAndDisconectContext = createContext<{\r\n  Connect: () => any;\r\n  Disconnect: () => any;\r\n}>({ Connect: () => null, Disconnect: () => null });\r\n\r\nexport const LightCharContext = createContext<{\r\n  lightChar?: BluetoothRemoteGATTCharacteristic;\r\n}>({});\r\n\r\nfunction parseRGB(value: DataView): RGB {\r\n  return { red: 21, blue: 10, green: 14 };\r\n}\r\ninterface ServicesAndCharacteristics {\r\n  services: BluetoothRemoteGATTService[];\r\n  characteristics: BluetoothRemoteGATTCharacteristic[];\r\n}\r\nexport const BLEProvider: FC = ({ children }) => {\r\n  let blue = navigator.bluetooth ? true : false;\r\n  const [BLEstate, BLEdispatch] = useReducer(bleReducer, { data: {}, ble: {} });\r\n  const { isConnected, connecting, isAvailable } = BLEstate.data;\r\n\r\n  const [valueState, valueDispatch] = useReducer(valueReducer, {});\r\n  const [sersAndChars, setSersAndChars] = useState<ServicesAndCharacteristics>({\r\n    services: [],\r\n    characteristics: [],\r\n  });\r\n  const [\r\n    lightChar,\r\n    setLightChar,\r\n  ] = useState<BluetoothRemoteGATTCharacteristic>();\r\n\r\n  // const allServices: servicesType[] = [\r\n  //   {\r\n  //     serviceUUID: \"battery_service\",\r\n  //     characteristicUUID: [\"battery_level\", \"battery_level_state\"],\r\n  //   },\r\n  //   {\r\n  //     serviceUUID: \"heart_rate\",\r\n  //     characteristicUUID: [\"heart_rate_measurement\"],\r\n  //   },\r\n  //   {\r\n  //     serviceUUID: \"environmental_sensing\",\r\n  //     characteristicUUID: [\"temperature\", \"humidity\"],\r\n  //   },\r\n  //   {\r\n  //     serviceUUID: \"4fafc201-1fb5-459e-8fcc-c5c9c331914b\",\r\n  //     characteristicUUID: [ \"beb5483e-36e1-4688-b7f5-ea07361b26a8\"],\r\n  //   },\r\n  //\r\n  // ];\r\n\r\n  // Availability\r\n  function handleAvailabilityChanged(e: any) {\r\n    BLEdispatch({ type: Ty.AvailabilityChanged, payload: e.target });\r\n  }\r\n  useEffect(() => {\r\n    navigator.bluetooth?.getAvailability().then((x) => {\r\n      BLEdispatch({ type: Ty.AvailabilityChanged, payload: x });\r\n      console.log(`One time av ${x}`);\r\n    });\r\n    navigator.bluetooth?.addEventListener(\r\n      \"availabilitychanged\",\r\n      handleAvailabilityChanged\r\n    );\r\n    return () => {\r\n      navigator.bluetooth?.removeEventListener(\r\n        \"availabilitychanged\",\r\n        handleAvailabilityChanged\r\n      );\r\n    };\r\n  }, []);\r\n\r\n  // Connect Function\r\n  async function Connect() {\r\n    if (!isAvailable || isConnected || connecting) return;\r\n\r\n    let device: BluetoothDevice;\r\n    let server: BluetoothRemoteGATTServer;\r\n    try {\r\n      BLEdispatch({ type: Ty.Connecting });\r\n      device = await navigator.bluetooth.requestDevice({\r\n        acceptAllDevices: true,\r\n        optionalServices: [\r\n          \"battery_service\",\r\n          \"4fafc201-1fb5-459e-8fcc-c5c9c331914b\",\r\n          \"environmental_sensing\",\r\n        ],\r\n      });\r\n      device.addEventListener(\"gattserverdisconnected\", HandelDisconnect);\r\n      if (!device.gatt) {\r\n        BLEdispatch({ type: Ty.Disconnect });\r\n        return;\r\n      }\r\n      server = await device.gatt.connect();\r\n      BLEdispatch({ type: Ty.Connected, payload: { server, device } });\r\n    } catch {\r\n      BLEdispatch({ type: Ty.FailedToConnect });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let services = await server.getPrimaryServices();\r\n      setSersAndChars((prevState) => ({ ...prevState, services }));\r\n      let characteristics: BluetoothRemoteGATTCharacteristic[];\r\n      services.forEach(async (service, i) => {\r\n        await new Promise((r) => setTimeout(r, i * 224));\r\n        console.trace();\r\n\r\n        characteristics = await service.getCharacteristics();\r\n        setSersAndChars((prevState) => ({\r\n          ...prevState,\r\n          characteristics: [...prevState.characteristics, ...characteristics],\r\n        }));\r\n\r\n        console.log(characteristics);\r\n\r\n        characteristics.forEach(async (c, j) => {\r\n          console.log(c, characteristics);\r\n\r\n          if (c.uuid === \"beb5483e-36e1-4688-b7f5-ea07361b26a8\") {\r\n            setLightChar(c);\r\n            return;\r\n          }\r\n          if (c.properties.notify) {\r\n            console.time(c.uuid);\r\n            await new Promise((r) => setTimeout(r, j * 1654));\r\n            console.timeEnd(c.uuid);\r\n\r\n            try {\r\n              await c.startNotifications();\r\n\r\n              console.error(\"HEllo\");\r\n            } catch (error) {\r\n              console.error(error, c.uuid);\r\n            }\r\n            c.addEventListener(\"characteristicvaluechanged\", HandelValueChange);\r\n          } else {\r\n            c.addEventListener(\"characteristicvaluechanged\", HandelValueChange);\r\n          }\r\n        });\r\n      });\r\n    } catch {}\r\n    console.log(valueState);\r\n  }\r\n  function HandelValueChange(e: Event) {\r\n    const char = e.target as BluetoothRemoteGATTCharacteristic;\r\n    if (char.value) {\r\n      const value = char.value;\r\n\r\n      switch (char.uuid) {\r\n        //Temperature\r\n        case \"00002a6e-0000-1000-8000-00805f9b34fb\":\r\n          const a = value.getUint8(0) + value.getUint8(1) * 256;\r\n          // console.log(\"Temp: %o\", value);\r\n          valueDispatch({ type: TyValue.temperature, paload: a / 100 });\r\n          break;\r\n        //Humidity\r\n        case \"00002a6f-0000-1000-8000-00805f9b34fb\":\r\n          const hum = value.getUint8(0) + value.getUint8(1) * 256;\r\n          // console.log(\"Hum: %o\", value);\r\n          valueDispatch({ type: TyValue.humidity, paload: hum / 100 });\r\n          break;\r\n\r\n        // Battery Level\r\n        case \"00002a19-0000-1000-8000-00805f9b34fb\":\r\n          const batteryLevel = value.getUint8(0) + value.getUint8(1) * 256;\r\n          // console.log(`Battery: ${batteryLevel} %o`, value);\r\n          console.log(batteryLevel);\r\n          valueDispatch({ type: TyValue.batteryLevel, paload: batteryLevel });\r\n          break;\r\n        // Battery Power State\r\n        case \"00002a1a-0000-1000-8000-00805f9b34fb\":\r\n          break;\r\n        case \"beb5483e-36e1-4688-b7f5-ea07361b26a8\":\r\n          const RGB = parseRGB(value);\r\n          valueDispatch({ type: TyValue.Lights, paload: RGB });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  // Disconnect Function\r\n  async function Disconnect() {\r\n    if (!isConnected) return;\r\n    try {\r\n      await BLEstate.ble.server?.disconnect();\r\n    } catch {}\r\n  }\r\n  function HandelDisconnect(e: Event) {\r\n    sersAndChars.characteristics.forEach((c) => {\r\n      c.removeEventListener(\"characteristicvaluechanged\", HandelValueChange);\r\n    });\r\n    setSersAndChars({ characteristics: [], services: [] });\r\n    console.log(e.target);\r\n    BLEdispatch({ type: Ty.Disconnect });\r\n    setLightChar(undefined);\r\n  }\r\n  return (\r\n    <>\r\n      {blue ? (\r\n        <BLEContext.Provider value={{ BLEstate, BLEdispatch }}>\r\n          <ConnectAndDisconectContext.Provider value={{ Connect, Disconnect }}>\r\n            <ValueContext.Provider value={{ valueState, valueDispatch }}>\r\n              <LightCharContext.Provider value={{ lightChar: lightChar }}>\r\n                {children}\r\n              </LightCharContext.Provider>\r\n            </ValueContext.Provider>\r\n          </ConnectAndDisconectContext.Provider>\r\n        </BLEContext.Provider>\r\n      ) : (\r\n        <div> No Bluetooth Detected</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ValueContext } from \"../BLE/BLEProvider\";\r\n// import gfm from \"remark-gfm\";\r\n\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nexport const WelcomePage = () => {\r\n  const { valueState } = useContext(ValueContext);\r\n\r\n  let lev = \"border-gray-600\";\r\n  let bat = 0;\r\n  let textWhite = \" \";\r\n  if (valueState.battery?.batteryLevel) {\r\n    lev =\r\n      valueState.battery?.batteryLevel > 60\r\n        ? \"border-blue-600 bg-blue-600\"\r\n        : valueState.battery?.batteryLevel > 15\r\n        ? \"border-green-600 bg-green-600\"\r\n        : \"border-red-600 bg-red-600\";\r\n    bat = valueState.battery.batteryLevel;\r\n    textWhite = valueState.battery.batteryLevel > 60 ? \"text-white\" : \" \";\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center w-full h-full\">\r\n      <div className=\"w-auto sm:w-5/6 mx-auto   \">\r\n        <ul className=\"grid grid-rows-3 grid-cols-1 sm:grid-cols-3 sm:grid-rows-1 gap-1 sm:gap-4\">\r\n          <li>\r\n            <Link to=\"/battery\">\r\n              <div className=\"h-full  border rounded-md shadow-lg p-4 bg-gray-50 \">\r\n                <h2 className=\"font-bold text-lg\"> Battery</h2>\r\n                <div className=\"mt-4 grid grid-cols-1 grid-rows-2 \">\r\n                  <div className=\"relative mx-auto w-24 h-24 bg-gray-200 rounded-full\">\r\n                    <div\r\n                      className={` absolute w-full h-full mx-auto  rounded-full border-8 `}\r\n                    ></div>\r\n                    <div\r\n                      className={`absolute w-full h-full  rounded-full border-8 ${lev} `}\r\n                      style={{\r\n                        transition: \"clip-path 600ms ease-in-out\",\r\n                        clipPath: `polygon(0% 100%, 0% ${100 - bat}%, 100% ${\r\n                          100 - bat\r\n                        }%, 100% 100%)`,\r\n                      }}\r\n                    ></div>\r\n                    <div className=\"absolute w-full h-full  flex items-center justify-center\">\r\n                      <span className={`${textWhite} text-xl font-semibold`}>\r\n                        {valueState.battery?.batteryLevel}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/*  TEXT   */}\r\n                  <div className=\"mt-4 mx-2 space-y-1\">\r\n                    <div className=\"flex\">\r\n                      Battery Level:\r\n                      <span className=\" ml-auto  text-xl font-semibold\">\r\n                        {valueState.battery?.batteryLevel}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                      Battery Status:\r\n                      <span className=\" ml-auto text-xl font-semibold\">\r\n                        {valueState.battery?.batteryLevel}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/light\">\r\n              <div className=\"h-full relative border rounded-md shadow-lg  p-4 bg-gray-50 \">\r\n                <h2 className=\"absolute font-bold text-lg\"> Lights</h2>\r\n                <div className=\"w-full h-full flex items-center justify-center\">\r\n                  <svg className=\"h-24 w-24 \" viewBox=\"0 0 24 24\">\r\n                    <path\r\n                      fill=\"currentColor\"\r\n                      style={{ color: `rgb()` }}\r\n                      d=\"M12,6A6,6 0 0,1 18,12C18,14.22 16.79,16.16 15,17.2V19A1,1 0 0,1 14,20H10A1,1 0 0,1 9,19V17.2C7.21,16.16 6,14.22 6,12A6,6 0 0,1 12,6M14,21V22A1,1 0 0,1 13,23H11A1,1 0 0,1 10,22V21H14M20,11H23V13H20V11M1,11H4V13H1V11M13,1V4H11V1H13M4.92,3.5L7.05,5.64L5.63,7.05L3.5,4.93L4.92,3.5M16.95,5.63L19.07,3.5L20.5,4.93L18.37,7.05L16.95,5.63Z\"\r\n                    />\r\n                    <path\r\n                      fill=\"currentColor\"\r\n                      d=\"M20,11H23V13H20V11M1,11H4V13H1V11M13,1V4H11V1H13M4.92,3.5L7.05,5.64L5.63,7.05L3.5,4.93L4.92,3.5M16.95,5.63L19.07,3.5L20.5,4.93L18.37,7.05L16.95,5.63M12,6A6,6 0 0,1 18,12C18,14.22 16.79,16.16 15,17.2V19A1,1 0 0,1 14,20H10A1,1 0 0,1 9,19V17.2C7.21,16.16 6,14.22 6,12A6,6 0 0,1 12,6M14,21V22A1,1 0 0,1 13,23H11A1,1 0 0,1 10,22V21H14M11,18H13V15.87C14.73,15.43 16,13.86 16,12A4,4 0 0,0 12,8A4,4 0 0,0 8,12C8,13.86 9.27,15.43 11,15.87V18Z\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/heat\">\r\n              <div className=\"h-full  border rounded-md shadow-lg  p-4  bg-gray-50 \">\r\n                <h2 className=\"font-bold text-lg\"> Temperature Humidity</h2>\r\n                <div className=\"mt-4 grid grid-cols-2 grid-rows-1\">\r\n                  <div className=\"flex flex-col-reverse items-center justify-center\">\r\n                    <span className=\"mt-2 text-center\">Temperature</span>\r\n                    <div\r\n                      className={` w-16 h-16 flex items-center justify-center rounded-full border-4 ${lev}`}\r\n                    >\r\n                      <span className=\" text-xl font-semibold\">\r\n                        {valueState.environmentalSensing?.temperature}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex flex-col-reverse items-center justify-center\">\r\n                    <span className=\"mt-2 text-center\">Humidity</span>\r\n                    <div\r\n                      className={` w-16 h-16 flex items-center justify-center rounded-full border-4 ${lev}`}\r\n                    >\r\n                      <span className=\" text-xl font-semibold\">\r\n                        {valueState.environmentalSensing?.humidity}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const HomePage = () => {\r\n  const markdown = `\r\n# A demo of \\`react-markdown\\`\r\n\r\n\\`react-markdown\\` is a markdown component for React.\r\n\r\n👉 Changes are re-rendered as you type.\r\n\r\n👈 Try writing some markdown on the left.\r\n\r\n## Overview\r\n\r\n* Follows [CommonMark](https://commonmark.org)\r\n\r\n* Optionally follows [GitHub Flavored Markdown](https://github.github.com/gfm/)\r\n\r\n* Renders actual React elements instead of using \\`dangerouslySetInnerHTML\\`\r\n\r\n* Lets you define your own components (to render \\`MyHeading\\` instead of \\`h1\\`)\r\n\r\n* Has a lot of plugins\r\n\r\n## Table of contents\r\n\r\nHere is an example of a plugin in action\r\n\r\n([\\`remark-toc\\`](https://github.com/remarkjs/remark-toc)).\r\n\r\nThis section is replaced by an actual table of contents.\r\n\r\n## Syntax highlighting\r\n\r\nHere is an example of a plugin to highlight code:\r\n\r\n[\\`rehype-highlight\\`](https://github.com/rehypejs/rehype-highlight).\r\n\r\n\\`\\`\\`js\r\n\r\nimport React from 'react'\r\n\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport Markdown from 'react-markdown'\r\n\r\nimport rehypeHighlight from 'rehype-highlight'\r\n\r\nReactDOM.render(\r\n  <Markdown rehypePlugins={[rehypeHighlight]}>{'# Your markdown here'}</Markdown>,\r\n  document.querySelector('#content')\r\n)\r\n\\`\\`\\`\r\n\r\nPretty neat, eh?\r\n## GitHub flavored markdown (GFM)\r\nFor GFM, you can *also* use a plugin:\r\n[\\`remark-gfm\\`](https://github.com/remarkjs/react-markdown#use).\r\nIt adds support for GitHub-specific extensions to the language:\r\ntables, strikethrough, tasklists, and literal URLs.\r\nThese features **do not work by default**.\r\n\r\n👆 Use the toggle above to add the plugin.\r\n| Feature    | Support              |\r\n| ---------: | :------------------- |\r\n| CommonMark | 100%                 |\r\n| GFM        | 100% w/ \\`remark-gfm\\` |\r\n\r\n~~strikethrough~~\r\n\r\n* [ ] task list\r\n\r\n* [x] checked item\r\n\r\nhttps://example.com\r\n\r\n## HTML in markdown\r\n\r\n⚠️ HTML in markdown is quite unsafe, but if you want to support it, you can\r\n\r\nuse [\\`rehype-raw\\`](https://github.com/rehypejs/rehype-raw).\r\n\r\n\r\nYou should probably combine it with\r\n\r\n[\\`rehype-sanitize\\`](https://github.com/rehypejs/rehype-sanitize).\r\n\r\n<blockquote>\r\n\r\n👆 Use the toggle above to add the plugin.\r\n\r\n</blockquote>\r\n\r\n## Components\r\n\r\nYou can pass components to change things:\r\n\r\n\\`\\`\\`js\r\nimport React from 'react'\r\n\r\nimport ReactDOM from 'react-dom'\r\n\r\n\r\nimport Markdown from 'react-markdown'\r\nimport MyFancyRule from './components/my-fancy-rule.js'\r\n\r\n\r\nReactDOM.render(\r\n\r\n  <Markdown\r\n\r\n  components={{\r\n\r\n    // Use h2s instead of h1s\r\n\r\n    h1: 'h2',\r\n\r\n    // Use a component instead of hrs\r\n\r\n    hr: ({node, ...props}) => <MyFancyRule {...props} />\r\n\r\n  }}\r\n\r\n  >\r\n\r\n  # Your markdown here\r\n\r\n  </Markdown>,\r\n  document.querySelector('#content')\r\n\r\n  )\r\n\r\n\r\n  \\`\\`\\`\r\n\r\n  ## More info?\r\n\r\n  Much more info is available in the\r\n\r\n  [readme on GitHub](https://github.com/remarkjs/react-markdown)!\r\n\r\n  ***\r\n\r\nA component by [Espen Hovlandsdal](https://espen.codes/)`;\r\n\r\n  return (\r\n    <article className=\"main__wrapper\">\r\n      <h1 className=\"sm:text-lg sm:leading-snug font-semibold tracking-wide uppercase  mb-3\">\r\n        Matruski rad:\r\n      </h1>\r\n      <p className=\" text-3xl sm:text-5xl lg:text-6xl leading-none font-extrabold text-gray-900 tracking-tight mb-8\">\r\n        Web tehnologije i <br /> mikrokontroleri\r\n      </p>\r\n      <p className=\"mt-2 \">\r\n        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Aperiam\r\n        repellat, excepturi possimus, voluptas iusto.\r\n      </p>\r\n      <div className=\"mt-80 grid grid-cols-2\">\r\n        <p className=\" leading-none\">\r\n          Učenik:\r\n          <br />\r\n          <span className=\"font-semibold text-lg\">Jovica Veljković</span>\r\n        </p>\r\n        <p className=\" leading-none  \">\r\n          Profesor:\r\n          <br />\r\n          <span className=\"font-semibold text-lg\">Radica Aleksandrov </span>\r\n        </p>\r\n      </div>\r\n      <div className=\"markdown-body\">\r\n        <ReactMarkdown children={markdown}></ReactMarkdown>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { ValueContext } from \"../BLE/BLEProvider\";\r\nimport { Line, ChartData } from \"react-chartjs-2\";\r\nimport { ChartData as IChartData } from \"chart.js\";\r\n\r\nexport const NavBattery = () => {\r\n  const options: Chart.ChartOptions = {\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            min: 0,\r\n            max: 100,\r\n            beginAtZero: true,\r\n          },\r\n          gridLines: {\r\n            borderDash: [10, 5],\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  const { valueState } = useContext(ValueContext);\r\n  const [chartData, setChartData] = useState<ChartData<IChartData>>({\r\n    labels: [\"start\"],\r\n    datasets: [\r\n      {\r\n        label: \"% Battery\",\r\n        data: [0],\r\n        fill: false,\r\n        backgroundColor: \"hsl(189, 60%, 70%)\",\r\n        borderColor: \"hsla(182, 100%, 56%, 0.2)\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    setChartData((prev: any) => {\r\n      let d: any;\r\n      if (prev.datasets?.[0].data) {\r\n        d = prev.datasets?.[0].data;\r\n        if (d.length > 150) {\r\n          prev.labels.shift();\r\n          d.shift();\r\n        }\r\n        prev.labels = [...prev.labels, new Date().toISOString().slice(17, 22)];\r\n        d = [...d, valueState.battery?.batteryLevel];\r\n        prev.datasets[0].data = d;\r\n        prev = { ...prev };\r\n      }\r\n\r\n      return prev;\r\n    });\r\n  }, [valueState.battery?.batteryLevel]);\r\n  return (\r\n    <div className=\"\">\r\n      <svg className=\"h-6 w-6 mx-auto\" viewBox=\"0 0 24 24\">\r\n        <path\r\n          fill=\"currentColor\"\r\n          d=\"M9,2V4H7.33A1.33,1.33 0 0,0 6,5.33V20.67C6,21.4 6.6,22 7.33,22H16.67A1.33,1.33 0 0,0 18,20.67V5.33C18,4.6 17.4,4 16.67,4H15V2H9M11.83,8H12.33L15.18,10.85L13.04,13L15.17,15.14L12.33,18H11.83V14.21L9.54,16.5L8.83,15.79L11.62,13L8.83,10.21L9.54,9.5L11.83,11.79V8M12.83,9.91V11.79L13.77,10.85L12.83,9.91M12.83,14.21V16.08L13.77,15.14L12.83,14.21Z\"\r\n        />\r\n      </svg>\r\n      <span>Battery</span>\r\n      <div className=\"chart\">\r\n        <Line data={chartData} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { ValueContext } from \"../BLE/BLEProvider\";\r\n\r\nexport const NavHeat = () => {\r\n  const { valueState } = useContext(ValueContext);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"\">\r\n        <svg className=\"h-6 w-6 mx-auto\" viewBox=\"0 0 24 24\">\r\n          <path\r\n            fill=\"currentColor\"\r\n            d=\"M15 13V5A3 3 0 0 0 9 5V13A5 5 0 1 0 15 13M12 4A1 1 0 0 1 13 5V8H11V5A1 1 0 0 1 12 4Z\"\r\n          />\r\n        </svg>\r\n        <span>Temperature</span>\r\n        <span>H:{valueState.environmentalSensing?.humidity}</span>\r\n\r\n        <span>T:{valueState.environmentalSensing?.temperature}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { RgbColorPicker, RgbColor } from \"react-colorful\";\r\nimport { LightCharContext } from \"../BLE/BLEProvider\";\r\n\r\nexport const NavLight = () => {\r\n  const [lightColor, setLightColor] = useState<RgbColor>({ r: 0, g: 0, b: 0 });\r\n  const { lightChar } = useContext(LightCharContext);\r\n\r\n  const changeColor = (c: RgbColor) => {\r\n    setLightColor(c);\r\n    color.current = c;\r\n  };\r\n  const dontWrite = useRef<boolean>(false);\r\n  const color = useRef<RgbColor>({ r: 0, g: 0, b: 0 });\r\n  const updateAgain = useRef<boolean>(false);\r\n\r\n  const update = async () => {\r\n    console.log(lightColor);\r\n    if (lightChar === undefined || dontWrite.current) {\r\n      console.log(\"skip update\");\r\n      updateAgain.current = true;\r\n      return;\r\n    }\r\n    dontWrite.current = true;\r\n    await lightChar?.writeValue(\r\n      new Uint8Array([color.current.r, color.current.g, color.current.b])\r\n    );\r\n    await lightChar?.writeValue(\r\n      new Uint8Array([color.current.r, color.current.g, color.current.b])\r\n    );\r\n    dontWrite.current = false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    update();\r\n    // eslint-disable-next-line\r\n  }, [lightColor]);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <svg className=\"h-6 w-6 mx-auto\" viewBox=\"0 0 24 24\">\r\n        <path\r\n          fill=\"currentColor\"\r\n          d=\"M12,2A7,7 0 0,0 5,9C5,11.38 6.19,13.47 8,14.74V17A1,1 0 0,0 9,18H15A1,1 0 0,0 16,17V14.74C17.81,13.47 19,11.38 19,9A7,7 0 0,0 12,2M9,21A1,1 0 0,0 10,22H14A1,1 0 0,0 15,21V20H9V21Z\"\r\n        />\r\n      </svg>\r\n      <span>Light</span>\r\n      <div className=\"picker\">\r\n        <button\r\n          tabIndex={0}\r\n          className=\"swatch\"\r\n          style={{\r\n            backgroundColor: `rgb(${color.current.r},${color.current.g},${color.current.b})`,\r\n          }}\r\n        />\r\n        <div className=\"popover\">\r\n          <RgbColorPicker color={lightColor} onChange={changeColor} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useConnect, useDisconnect, useStatus } from \"../BLE/hooks\";\r\n\r\nimport { NavBattery } from \"./NavBattery\";\r\nimport { NavHeat } from \"./NavHeat\";\r\nimport { NavLight } from \"./NavLight\";\r\n\r\nexport const SideNav = () => {\r\n  const [Connect] = useConnect();\r\n  const [Disconnect] = useDisconnect();\r\n\r\n  const { failed, device, isConnected } = useStatus();\r\n\r\n  // const { failed, device } = useStatus();\r\n  // const isConnected = true;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"aside__top-nav\">\r\n        <button className=\"aside__open-button\">\r\n          <svg className=\"w-6 h-6 text-gray-800 mx-auto\" viewBox=\"0 0 24 24\">\r\n            <path\r\n              fill=\"currentColor\"\r\n              d=\"M14.88,16.29L13,18.17V14.41M13,5.83L14.88,7.71L13,9.58M17.71,7.71L12,2H11V9.58L6.41,5L5,6.41L10.59,12L5,17.58L6.41,19L11,14.41V22H12L17.71,16.29L13.41,12L17.71,7.71Z\"\r\n            />\r\n          </svg>\r\n        </button>\r\n        <button className=\"aside__close-button\" tabIndex={-1} disabled>\r\n          <svg className=\"w-6 h-6 text-gray-800 mx-auto\" viewBox=\"0 0 24 24\">\r\n            <path\r\n              fill=\"currentColor\"\r\n              d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      <div tabIndex={0} className=\"aside__wrapper\">\r\n        <div className=\" aside__buttons \">\r\n          {!isConnected ? (\r\n            <>\r\n              <button className=\"\" onClick={Connect}>\r\n                <svg\r\n                  className=\"w-6 h-6 text-gray-800 mx-auto\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M12 7.5C12.69 7.5 13.27 7.73 13.76 8.2S14.5 9.27 14.5 10C14.5 11.05 14 11.81 13 12.28V21H11V12.28C10 11.81 9.5 11.05 9.5 10C9.5 9.27 9.76 8.67 10.24 8.2S11.31 7.5 12 7.5M16.69 5.3C17.94 6.55 18.61 8.11 18.7 10C18.7 11.8 18.03 13.38 16.69 14.72L15.5 13.5C16.5 12.59 17 11.42 17 10C17 8.67 16.5 7.5 15.5 6.5L16.69 5.3M6.09 4.08C4.5 5.67 3.7 7.64 3.7 10S4.5 14.3 6.09 15.89L4.92 17.11C3 15.08 2 12.7 2 10C2 7.3 3 4.94 4.92 2.91L6.09 4.08M19.08 2.91C21 4.94 22 7.3 22 10C22 12.8 21 15.17 19.08 17.11L17.91 15.89C19.5 14.3 20.3 12.33 20.3 10S19.5 5.67 17.91 4.08L19.08 2.91M7.31 5.3L8.5 6.5C7.5 7.42 7 8.58 7 10C7 11.33 7.5 12.5 8.5 13.5L7.31 14.72C5.97 13.38 5.3 11.8 5.3 10C5.3 8.2 5.97 6.64 7.31 5.3Z\"\r\n                  />\r\n                </svg>\r\n                Connect\r\n              </button>\r\n              {failed && (\r\n                <p className=\"text-sm w-full sm: p-2 rounded-3xl  bg-red-200 \">\r\n                  Faild to connect\r\n                </p>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <button className=\"\" onClick={Disconnect}>\r\n              Disconnect\r\n              <p className=\"text-sm font-normal\">{device?.name}</p>\r\n            </button>\r\n          )}\r\n        </div>\r\n        {isConnected && (\r\n          <div className=\" aside__info \">\r\n            <NavHeat />\r\n            <NavLight />\r\n            <NavBattery />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { ConnectAndDisconectContext, BLEContext } from \"./BLEProvider\";\r\n\r\nexport const useLogAll = () => {\r\n  const { BLEstate } = useContext(BLEContext);\r\n  function logAll() {\r\n    console.log(\"device %o\", BLEstate.ble.device);\r\n    console.log(\"GATT Server %o\", BLEstate.ble.server);\r\n  }\r\n  return logAll;\r\n};\r\n\r\nexport const useStatus = () => {\r\n  const { BLEstate } = useContext(BLEContext);\r\n  const { device } = BLEstate.ble;\r\n  const { isAvailable, isConnected, connecting, failed } = BLEstate.data;\r\n\r\n  return { isAvailable, isConnected, connecting, failed, device } as const;\r\n};\r\n\r\nexport const useConnect = () => {\r\n  const { Connect } = useContext(ConnectAndDisconectContext);\r\n  return [Connect] as const;\r\n};\r\n\r\nexport const useDisconnect = () => {\r\n  const { Disconnect } = useContext(ConnectAndDisconectContext);\r\n\r\n  return [Disconnect] as const;\r\n};\r\n///\r\n//     GetData\r\n///\r\n// export const useService = (serviceUUID: BluetoothServiceUUID) => {\r\n//   const { BLEstate } = useContext(BLEContext);\r\n//   const { serState, serDispatch } = useContext(ServicesContext);\r\n//   const GATT = BLEstate.ble.server;\r\n\r\n//   async function getService() {\r\n//     if (serState.services?.find((l) => l.serviceUUID === serviceUUID)) return;\r\n//     const s = await GATT?.getPrimaryService(serviceUUID);\r\n//     serDispatch({\r\n//       type: TyS.addSer,\r\n//       payload: { serviceUUID: serviceUUID, service: s },\r\n//     });\r\n//   }\r\n//   useEffect(() => {\r\n//     getService();\r\n//     // eslint-disable-next-line\r\n//   }, [GATT]);\r\n\r\n//   return serState.services?.find((l) => l.serviceUUID === serviceUUID);\r\n// };\r\n\r\n// export const useGetData = (\r\n//   serviceUUID: BluetoothServiceUUID,\r\n//   characteristicUUID: BluetoothCharacteristicUUID\r\n// ) => {\r\n//   const { BLEstate } = useContext(BLEContext);\r\n//   const GATT = BLEstate.ble.server;\r\n//   const [\r\n//     // eslint-disable-next-line\r\n//     characteristic,\r\n//     setCharacteristic,\r\n//   ] = useState<BluetoothRemoteGATTCharacteristic>();\r\n//   const service = useService(serviceUUID);\r\n\r\n//   const [value, setValue] = useState<DataView>();\r\n//   async function getData() {\r\n//     console.log(\"GetData  \");\r\n\r\n//     try {\r\n//       const c = await service?.service?.getCharacteristic(characteristicUUID);\r\n//       console.log(\"Char %o\", c);\r\n\r\n//       setCharacteristic(c);\r\n\r\n//       if (c?.properties.notify) {\r\n//         console.log(\"Char \");\r\n//         await c.startNotifications();\r\n//         c?.addEventListener(\"characteristicvaluechanged\", HandelValueChange);\r\n//       } else {\r\n//         c?.addEventListener(\"characteristicvaluechanged\", HandelValueChange);\r\n//       }\r\n//     } catch (e) {\r\n//       console.error(e);\r\n//     }\r\n//   }\r\n\r\n//   function HandelValueChange(e: Event) {\r\n//     const v = (e.target as BluetoothRemoteGATTCharacteristic).value;\r\n//     console.log(\"HandelValueChange %o\", v);\r\n\r\n//     setValue(v);\r\n//   }\r\n//   useEffect(() => {\r\n//     getData();\r\n\r\n//     // eslint-disable-next-line\r\n//   }, [GATT, service]);\r\n//   useEffect(() => {\r\n//     console.log(\r\n//       \"value %o, serviceUUID %o, characteristicUUID %o, service %o\",\r\n//       value,\r\n//       serviceUUID,\r\n//       characteristicUUID,\r\n//       service\r\n//     );\r\n//   }, [value, serviceUUID, characteristicUUID, service]);\r\n\r\n//   return [value, getData] as const;\r\n// };\r\n// export const useIsConnected = (): boolean => {\r\n//   return useContext(BLEContext).state.isConnected;\r\n// };\r\n","import { BLEProvider } from \"./BLE/BLEProvider\";\n\nimport { HomePage } from \"./pages/WelcomePage\";\nimport { SideNav } from \"./sidenav/SideNav\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"title-bar\"></div>\n\n      <div className=\"layout-grid container\">\n        <main className=\"main\">\n          <HomePage />\n        </main>\n        <aside className=\"aside\">\n          <BLEProvider>\n            <SideNav />\n          </BLEProvider>\n        </aside>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./normalize.css\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}